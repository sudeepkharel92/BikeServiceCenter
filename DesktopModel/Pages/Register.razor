@page "/Register"
@using DesktopModel.Model
@using DesktopModel.Services;
@inject IAuth Auth;
@inject NavigationManager NavManager;
<h3>Register</h3>
<EditForm Model="@registrationModel" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Name</label>
        <input class="form-control" @bind-value="@registrationModel.Name" placeholder="Enter Name">
        <ValidationMessage For="@(()=> registrationModel.Name)" />
    </div>
    <div class="form-group">
        <label>Email address</label>
        <InputSelect id="department" @bind-Value="@registrationModel.RoleId">
            <option value="1">Admin</option>
            <option value="0">User</option>
        </InputSelect>
    </div>
    <div class="form-group">
        <label>Email address</label>
        <input type="email" @bind-value="@registrationModel.Email" class="form-control" placeholder="Enter email">
        <ValidationMessage For="@(()=> registrationModel.Email)" />
    </div>
    <div class="mt-2 form-group">
        <label>Password</label>
        <input type="password" @bind-value="@registrationModel.Password" class="form-control" placeholder="Password">
        <ValidationMessage For="@(()=> registrationModel.Password)" />
    </div>

    <div class="mt-2 text-end">
        <NavLink class="nav-link" href="/">
            <span>Already have account?</span>
        </NavLink>
    </div>

    <div class="text-center mt-2">
        <button class="btn btn-primary" type="submit">
            <span class="@_spinnerClass" role="status" aria-hidden="true"></span>
            Register
        </button>
    </div>
</EditForm>

@code {
    RegistrationModel registrationModel = new();
    private string _spinnerClass = "";
    private async void Submit()
    {
        try
        {
            _spinnerClass = "spinner-border spinner-border-sm";
            var response = await Auth.Register(registrationModel);
            if (response == "Insert Sucessfully!!")
            {
                await App.Current.MainPage.DisplayAlert("Success", response, "OK");
                NavManager.NavigateTo("/");
            }
            else
            {
                await App.Current.MainPage.DisplayAlert("Oops", response, "OK");
            }
            
        }
        catch(Exception ex)
        {
            await App.Current.MainPage.DisplayAlert("Oops", ex.Message, "OK");
        }
    }
}
